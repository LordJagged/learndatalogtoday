{:text-file "chapters/chapter-6.md"
 :exercises 
 [{:question "Find people by age. Use the function `tutorial.fns/age` to find the age given a birthday and a date representing \"today\"."
   :inputs [{:type :query
             :value [:find ?name
                     :in $ ?age ?today
                     :where
                     ...]
             :correct-value [:find ?name 
                             :in $ ?age ?today
                             :where 
                             [?p :person/name ?name] 
                             [?p :person/born ?born] 
                             [(tutorial.fns/age ?born ?today) ?age]]}
            {:type :value
             :value 63}
            {:type :value
             :value #inst "2013-08-02"}]}
  
  {:question "Find people younger than Bruce Willis and their ages."
   :inputs [{:type :query
             :value [:find ?name ?age
                     :in $ ?today
                     :where
                     ...]
             :correct-value [:find ?name ?age 
                             :in $ ?today
                             :where 
                             [?p :person/name "Bruce Willis"] 
                             [?p :person/born ?sborn] 
                             [?p2 :person/name ?name] 
                             [?p2 :person/born ?born] 
                             [(< ?sborn ?born)] 
                             [(tutorial.fns/age ?born ?today) ?age]]}
            {:type :value
             :value #inst "2013-08-02"}]}

  {:question "The birthday paradox states that in a room of 23 people there is a 50% chance that someone has the same birthday. Write a query to find who has the same birthday. Use the `<` predicate on the names to avoid duplicate answers. You can use (the deprecated) `.getDate` and `.getMonth` java `Date` methods."
   :inputs [{:type :query
             :value [:find ?name-1 ?name-2 
                     :where 
                     ...
                     [(< ?name-1 ?name-2)]]
             :correct-value [:find ?name-1 ?name-2
                             :where
                             [?p1 :person/name ?name-1]
                             [?p2 :person/name ?name-2]
                             [?p1 :person/born ?born-1]
                             [?p2 :person/born ?born-2]
                             [(.getMonth ?born-1) ?m]
                             [(.getMonth ?born-2) ?m]
                             [(.getDate ?born-1) ?d]
                             [(.getDate ?born-2) ?d]
                             [(< ?name-1 ?name-2)]]}]}]}
